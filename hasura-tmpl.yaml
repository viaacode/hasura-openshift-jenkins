apiVersion: v1
kind: Template
metadata:
  annotations:
  creationTimestamp: null
  name: hasura
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: hasura-${ENV}
        hasuraService: custom
      name: hasura-${ENV}
      namespace: default
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: hasura-${ENV}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: hasura-${ENV}
        spec:
          containers:
          - image: hasura/graphql-engine:${HASURA_VERSION}
            imagePullPolicy: IfNotPresent
            name: hasura-${ENV}
            env:
            - name: HASURA_GRAPHQL_DATABASE_URL
              value: postgres://username:password@hostname:port/dbname
            - name: HASURA_GRAPHQL_ENABLE_CONSOLE
              value: "true"
            - name: ENV
              value: "tst"
            ports:
            - containerPort: 8080
              protocol: TCP
            resources: {}


  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: hasura-${ENV}
      name: hasura-${ENV}
      namespace: default
    spec:
      ports:
      - protocol: TCP
        port: 8080
        name: http
        targetPort: 8080
      selector:
        app: hasura-${ENV}
      type: LoadBalancer

  - apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: postgres-${ENV}
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: postgres-${ENV}
        spec:

          containers:
            - name: postgres
              image: docker.io/postgres@sha256:97fcdcff5106e995661864bebf1fd6881553471b88e2afd6f98fbcb775bf66b7
              imagePullPolicy: "Always"
              ports:
                - containerPort: 5432
              envFrom:
                - configMapRef:
                    name: postgres-${ENV}cnf
              volumeMounts:
                - mountPath: /var/lib/postgresql/data
                  name: postgresdb-${ENV}
          volumes:
            - name: postgresdb-${ENV}
              persistentVolumeClaim:
                claimName: postgres-${ENV}-pv-claim
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: postgres-${ENV}cnf
      labels:
        app: postgres-{ENV}
    data:
      POSTGRES_DB: ${POSTGRESQL_DATABASE}
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      annotations:
        volume.beta.kubernetes.io/storage-provisioner: kubernetes.io/vsphere-volume
      creationTimestamp: null

      labels:
        ENV: ${ENV}
        app: hasura-${ENV}
      name: postgres-${ENV}-pv-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${VOLUME_CAPACITY}
      storageClassName: vsphere-standard
    status: {}

  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: hasura-${ENV}
      name: postgres-${ENV}
    spec:
      ports:
      - protocol: TCP
        port: 5432
        targetPort: 5432
      resources:
        limits:
          cpu: 900m
          memory: ${MEMORY_LIMIT}
        requests:
          cpu: 100m
          memory: 128Mi        
      selector:
        app: postgres-${ENV}
      type: LoadBalancer



parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi

- description: The name of the OpenShift Service exposed for the database.
  displayName: Database Service Name
  name: DATABASE_SERVICE_NAME
  required: true
  value: postgresql-tst
- description: Username for PostgreSQL user that will be used for accessing the
    database.
  displayName: PostgreSQL Connection Username
  from: user[A-Z0-9]{3}
  generate: expression
  name: POSTGRESQL_USER
  required: true
- description: Password for the PostgreSQL connection user.
  displayName: PostgreSQL Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: POSTGRESQL_PASSWORD
  required: true
- description: Name of the PostgreSQL database accessed.
  displayName: PostgreSQL Database Name
  name: POSTGRESQL_DATABASE
  required: true
  value: sampledb
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi

- name: ENV
  value: tst
- description: string version eg v1.0.0-beta.1
  name: HASURA_VERSION
  required: true
  value: v1.0.0-beta.1
- name: NAMESPACE
  value: pipeline-app
